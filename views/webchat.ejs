<!DOCTYPE html>
<html lang="en">
  <head>
    <title>WebChat</title>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
      body {
        background-color: gray;
        font-size: 20px;
      }

      li {
        list-style-type: none;
      }

      .top-screen {
        display: flex;
        margin-bottom: 20px;
        height: 87vh;
      }

      .name-screen {
        border-color: black;
        border-style: solid;
        border-width: medium;
        margin-right: 5px;
        padding: 10px;
      }

      .nickname {
        border-color: #ccc;
        border-style: solid;
        border-width: 1px;
        font-size: 16px;
        padding: 5px;
        text-align: left;
        width: 75%;
      }

      .ok-btn {
        background: #3d94f6;
        border: solid #337fed 1px;
        color: white;
        cursor: pointer;
        display: inline-block;
        font-size: 16px;
        padding: 5px;
        text-align: center;
        text-decoration: none;
      }

      .ok-btn:hover {
        border: solid #337fed 1px;
        background: #1e62d0;
        text-decoration: none;
      }

      .message-screen {
        background-color: white;
        border-color: black;
        border-style: solid;
        border-width: medium;
        display: flex;
        padding: 10px;
        width: 100%;
      }

      .send-message {
        display: flex;
        width: 100%;
      }

      form {
        display: flex;
        width: 100%;
      }

      .message {
        border-color: #ccc;
        border-style: solid;
        border-radius: 10px;
        border-width: 3px;
        font-size: 20px;
        padding: 6px;
        text-align: left;
        width: inherit;
      }

      .send-btn {
        background: #3d94f6;
        background-image: linear-gradient(#3d94f6, #1e62d0);
        border: solid #337fed 1px;
        border-radius: 20px;
        box-shadow: 1px 1px 20px 0 black;
        color: white;
        cursor: pointer;
        display: inline-block;
        font-size: 20px;
        font-weight: 700;
        margin-left: 15px;
        padding: 10px;
        text-align: center;
        text-decoration: none;
      }

      .send-btn:hover {
        border: solid #337fed 1px;
        background: #1e62d0;
        background-image: linear-gradient(#1e62d0, #3d94f6);
        border-radius: 20px;
        text-decoration: none;
      }
    </style>
  </head>
  <body>
    <div class="top-screen">
      <div class="name-screen">
        <input
          type="text"
          name="nickname"
          id="nickname"
          class="nickname"
          placeholder="Nickname"
          data-testid="nickname-box"
        />
        <button class="ok-btn" data-testid="nickname-button">Ok</button>
        <p>Usu√°rios</p>
        <ul class="nicknames">
          <li>jf83hf38hfeu</li>
          <li>f4fewfewfewf</li>
          <li>n65n5nrtntehb</li>
        </ul>
      </div>
      <div class="message-screen">
        <ul class="messages">
          <!-- <li data-testid="message">Mensagem</li> -->
          <% messages.forEach((message) => { %>
          <li data-testid="message"><%= message %></li>
          <%}) %>
        </ul>
      </div>
    </div>
    <div class="send-message">
      <form action="">
        <input
          type="text"
          id="message"
          class="message"
          placeholder="Type..."
          data-testid="message-box"
          autocomplete="off"
        />
        <button class="send-btn" data-testid="send-button">Enviar</button>
      </form>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();

      const form = document.querySelector('form');
      const sendMessage = document.getElementById('message');
      form.addEventListener('submit', (event) => {
        event.preventDefault();
        socket.emit('newMessage', sendMessage.value);
        sendMessage.value = '';
        return false;
      });

      const getMessage = (message) => {
        const messagesUl = document.querySelector('.messages');
        const li = document.createElement('li');
        li.innerText = message;
        messagesUl.appendChild(li);
      };

      socket.on('serverMessage', ({ message }) => {
        getMessage(message);
      });
    </script>
  </body>
</html>
