<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <h1>Chat</h1>
  <div>
    <div>
        <input id="name" type="text"
          placeholder="Insira seu nome"
          data-testid="nickname-box"
        />
      <button id="save" data-testid="nickname-button">Ssalvar</button>
    </div>
    <div>
      <section id="last" data-index="3">
        <ul id="myUl" class="classUl"></ul>
      </section>
      <section id="direita">
        <ul id="ul"></ul>
      </section>
    </div>
    <div>
        <input id="message" type="text"
        data-testid="message-box"/>
      <button id="send" data-testid="send-button">Enviar</button>
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const buttonSave = document.getElementById('save');
    const buttonSend = document.getElementById('send');
    let nickname;
    let name;

    function removeUl() {
      const remove = document.getElementById('last');
      remove.removeChild(remove.children[0]);
    }

    function addUl() {
      const last = document.getElementById("last");
      const ul = document.createElement("ul");
      ul.setAttribute("id", "myUl");
      ul.classList.add("classUl");
      last.appendChild(ul);
    }
    
    function renderNamesLogados(namesLogados) {
      removeUl();
      addUl();
      const ul = document.getElementById("myUl");

      const li = document.createElement("li");
      li.appendChild(document.createTextNode(nickname));
      li.classList.add("content-li");
      li.setAttribute('data-testid', 'online-user');
      ul.appendChild(li);

      namesLogados.forEach((names) => {
        if (names !== nickname) {
          const li = document.createElement("li");
          li.appendChild(document.createTextNode(names));
          li.classList.add("content-li");
          li.setAttribute('data-testid', 'online-user');
          ul.appendChild(li);
        }
      });
    }
    
    function renderMessage(user) {
      const ul = document.getElementById("ul");
      const li = document.createElement("li");
      li.innerText = user;
      li.setAttribute('data-testid', 'message');
      ul.appendChild(li);
    }
    
    function renderGetMessages(all) {
      const ul = document.getElementById("ul");
      all.forEach((messages) => {
        const { chatMessage, nickname, timestamp } = messages;
        const li = document.createElement("li");
        li.innerText = `${timestamp} - ${nickname} : ${chatMessage}`;
        li.setAttribute('data-testid', 'message');
        ul.appendChild(li);
      })
    };

    socket.on('online', randomAll => {
      console.log('Array do front - ', randomAll);
      if (!name) {
        nickname = socket.id.slice(0, 16);
      } else {
        nickname = name;
      }
      
      renderNamesLogados(randomAll);
    });
    
    socket.on('html', (all) => {
      renderGetMessages(all)
    });
    

    socket.on('message', (user) => {
      renderMessage(user);
    });

    buttonSave.addEventListener('click', () => {
      name = document.getElementById('name').value;
      nickname = name;
      socket.emit('saveUser', name);
    });

    buttonSend.addEventListener('click', () => {
      const chatMessage = document.getElementById('message').value;
      socket.emit('message', {chatMessage,  nickname});
    });
  </script>
</body>
</html>