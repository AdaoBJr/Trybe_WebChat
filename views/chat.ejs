<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="/socket.io/socket.io.js"></script>
  <title>Document</title>
</head>
<body>
  <div>
    <section id="esquerda" data-index="3">
      <ul id="user-online"></ul>
      <ul id="message"></ul>
    </section>
  </div>

  <div>
    <input id="input-nick-name" data-testid="nickname-box" placeholder="Digite seu Nick Name"/>
    <button id="button-save" data-testid="nickname-button">Salvar Nick Name</button>
  </div>
  
  <div>
    <input id="input-message" data-testid="message-box" placeholder="Digite sua mensagem"/>
    <button id="button" data-testid="send-button">Enviar</button>
  </div>

  <script>
    const client = window.io();
    const button = document.querySelector('#button');
    const messageCard = document.querySelector('#message');
    const ulUserOnline = document.querySelector("#user-online");
    const buttonSave = document.querySelector("#button-save");
    let name;
    let nickname;
    
    button.addEventListener('click', () => {
      const inputMessage = document.querySelector('#input-message');
      const inputNickName = document.querySelector('#input-nick-name');

      client.emit('message', {
        chatMessage: inputMessage.value,
        nickname: inputNickName.value
      })
      inputMessage.value = "";
      inputNickName.value = "";
    })

    // Feito com a ajuda do Aluno joao
    function remove() {
      const pai = document.querySelector('#esquerda');
      pai.removeChild(pai.children[0]);
    }

    function addUl() {
      const esquerda = document.getElementById("esquerda");
      const ul = document.createElement("ul");
      ul.setAttribute("id", "user-online");
      esquerda.appendChild(ul);
    }
    
    client.on('message', (message) => {
      const li = document.createElement('li');
      li.innerText = `${message.timestamp} - ${message.nickname}: ${message.chatMessage}`;
      li.setAttribute('data-testid', 'message');
     return messageCard.appendChild(li);
    });

    client.on('html', (message) => {
      message.forEach(userMessage => {
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'message');
        li.innerText = `${userMessage.timestamp} - ${userMessage.nickname}: ${userMessage.chatMessage}`;
       return messageCard.appendChild(li);
      })
    })

    buttonSave.addEventListener('click', () => {
      name = document.querySelector('#input-nick-name').value;
      nickname = name;
      client.emit('saveUser', name);
    });

    function renderNamesLogados(namesLogados) {
      remove();
      addUl();
      const ul = document.querySelector("#user-online");
      const li = document.createElement("li");
      li.innerText = nickname;
      li.setAttribute('data-testid', 'online-user');
      ul.appendChild(li);
      namesLogados.forEach((names) => {
        if (names !== nickname) {
          const li = document.createElement("li");
          li.appendChild(document.createTextNode(names));
          li.setAttribute('data-testid', 'online-user');
          ul.appendChild(li);
        }
      });
    }

    client.on('online', (userOnline) => {
      console.log(userOnline);
      if(!name){
        nickname = client.id.slice(0, 16);
      }else {
        nickname = name;
      }
      renderNamesLogados(userOnline);
    })

  </script>
</body>
</html>