<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=p, initial-scale=1.0">
    <title>ChatWeb Project</title>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <form >
        <!-- <p data-testid="online-user" class="randoNickname"><%=  %></p> -->
        <input type="text" id="nickname" data-testid="nickname-box" placeholder="NickName">
        <button type="button" data-testid="nickname-button" class="saveNickname">Save</button>
        <input data-testid="message-box" type="text" id="chatMessage" value="" placeholder="Type your message...">
        <ul id="messages"></ul>
        <button data-testid="send-button" id="chat" type="submit">Send</button>
    </form>
    <div>
        <h3>Lista Usuários</h3>
        <ul class="users"></ul>
    </div>
    
</body>
<script>
    const socket = io();

    const formChat = document.getElementById('chat');
    let nickname = '<%= nickName %>';

    // Cria a lista de users online 
        const createLi = (nickname, id) => {
        const ulUsers = document.querySelector('.users');
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'online-user');
        li.setAttribute('class', 'online');
        li.setAttribute('id', id);
        li.innerText = nickname;
        ulUsers.appendChild(li);
        };
        socket.on('olineUsers', ({ nickname, id }) => createLi(nickname, id));

    
    formChat.addEventListener('click', (event) => {
        event.preventDefault();
        
        const chatMessage = document.getElementById('chatMessage').value;
        
        if(chatMessage.length) {
            const sendMessage = {
                chatMessage,
                nickname,
            }
            socket.emit('message', sendMessage);
            // enviando mensagem e o nickname para o server
        }

    });

    // Cria um lista com as mensagens
    const createMessage = (message) => {
        const ulMensages = document.querySelector('#messages');
        const li = document.createElement('li');
        li.setAttribute('data-testid', 'message');
        li.innerText = message;
        ulMensages.appendChild(li);
    }
    
    // chama função de nickname aleatorio e salva na tag e na variavel nickname
    const randoNickname = document.querySelector('.randoNickname');
    //const randonNicknameRandom = '<%= nickName %>';
    /* randoNickname.innerHTML = randonNicknameRandom;
    nickname = randonNicknameRandom; */
    

    const saveNickNane = document.querySelector('.saveNickname');

    // Salva o nickname tanto na sessuinStorage quanto nas mensagens e atualiza a variavel nickname
    saveNickNane.addEventListener('click', () => {
        const nickName = document.getElementById('nickname').value;
        const liOnlineUsers = document.querySelector('.online');
        console.log(liOnlineUsers);
        // andoNickname.innerHTML = nickName;
        nickname = nickName; 
        liOnlineUsers.innerHTML = nickName;
        socket.emit('updateNickname', nickname);
    });
    
    const updateNickName = (nickname, id) => {
        const liOnlineUsers = document.getElementById(id);
        console.log(liOnlineUsers);
        liOnlineUsers.innerHTML = nickname;
    };

    const offUsers = (id) => {
        const ulUsers = document.querySelector('.users');
        const liOnlineUsers = document.getElementById(id);
        ulUsers.removeChild(liOnlineUsers);
    };

    socket.on('message', (message) => createMessage(message));
    socket.on('updateNickname', ({nickname, id}) => updateNickName(nickname, id));
    socket.on('offUsers', (id) => offUsers(id));
    
</script>
</html>