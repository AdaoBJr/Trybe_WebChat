<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Project-Web Chat</title>
  <style>
    .root {
      display: flex;
      flex-wrap: nowrap;
      justify-content: space-between;
    }

    #container-menssage {
      border: 1px solid black;
      display: flex;
      flex-direction: column;
      height: 90vh;
    }
  </style>
</head>
<body>
  <div class="root">
    <section id="user-container"></section>
    <section>
      <div id="container-menssage"></div>
      <form id="form-convesation" action="">
        <input data-testid="message-box" id="inputMessage" type="text" placeholder="Digite uma nova menssagem aqui" /><button data-testid="send-button">Enviar</button>
      </form>
    </section>
    <section>
      <form id="nickname" action="">
        <input data-testid="nickname-box" id="input-nickname" type="text" placeholder="Insira seu nickname" /><button data-testid="nickname-button">Salvar</button>
      </form>
    </section>
  </div>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const users = [];

    let nick = '';

    const formConversations = document.querySelector('#form-convesation');
    const inputMessage = document.querySelector('#inputMessage');
    const formNickName = document.querySelector('#nickname');
    const inputNickName = document.querySelector('#input-nickname');

    formNickName.addEventListener('submit', (e) => {
      e.preventDefault();
      nick = inputNickName.value;
      socket.emit('send-nickname', inputNickName.value);
      inputNickName.value = '';

      return false;
    });

    formConversations.addEventListener('submit', (e) => {
      e.preventDefault();

      socket.emit('message', { chatMessage: inputMessage.value, nickname: nick });
      inputMessage.value = '';

      return false;
    });

    const createMessage = (message) => {
      const containerMessage = document.querySelector('#container-menssage');
      const spanMessage = document.createElement('span');

      spanMessage.setAttribute('data-testid', 'message')

      spanMessage.innerText = message;
      containerMessage.appendChild(spanMessage);
    }

    const newUser = (user) => {
      const userContainer = document.querySelector('#user-container');
      const spanUser = document.createElement('span');

      spanUser.setAttribute('data-testid', 'online-user');

      spanUser.innerText = user;
      userContainer.appendChild(spanUser);
    }

    socket.on('newConnection', (message) => {
      createMessage(message.chatMessage);
      newUser(message.nickname);
    });
    socket.on('welcome', (message) => createMessage(message));
    socket.on('message', (message) => createMessage(message));
  </script>
</body>
</html>