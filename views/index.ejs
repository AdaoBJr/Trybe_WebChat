<!-- Chat Frontend source: https://socket.io/get-started/chat#serving-html -->
<!DOCTYPE html>
<html>

<head>
  <title>Socket.IO chat</title>
  <link rel="stylesheet" href="/views/style.css">
</head>

<body>
  <form class="form-nick" action="">
    <input class="input-nickname" data-testid="nickname-box" type="text" autocomplete="off" placeholder="Nickname here">
    <button data-testid="nickname-button">Change Nick</button>
  </form>
  <ul class="users-on"></ul>
  <ul class="messages">
    <li>Coffee</li>
    <li>Tea</li>
    <li>Milk</li>
  </ul>
  <form class="form" action="">
    <div id="display-nick"></div>
    <input class="input" data-testid="message-box" autocomplete="off" />
    <button data-testid="send-button">Send</button>
  </form>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();

    const formNick = document.querySelector('.form-nick');
    const inputNick = document.querySelector('.input-nickname');
    const form = document.querySelector('.form');
    const input = document.querySelector('.input');
    const messages = document.querySelector('.messages');

    window.onload = () => {
      let randomNick = Math.random().toString(36).substring(2, 10) + Math.random().toString(36).substring(2, 10); //source: https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript
      const displayNick = document.querySelector('#display-nick');
      const span = document.createElement('span');
      span.setAttribute('id', 'nickname');
      span.textContent = randomNick;
      displayNick.appendChild(span);
      socket.emit('userlogedin', randomNick);
    };

    formNick.addEventListener('submit', (e) => {
      e.preventDefault();
      if (inputNick.value) {
        let nickDisplayed = document.querySelector('#nickname');
        nickDisplayed.textContent = inputNick.value;
        inputNick.value = '';
        socket.emit('nickname', nickDisplayed.textContent);
      }
    });

    form.addEventListener('submit', (e) => {
      e.preventDefault();
      if (input.value) {
        const nickname = document.querySelector('#nickname').textContent;
        const messageData = { nickname, chatMessage: input.value };
        socket.emit('message', messageData);
        input.value = '';
      }
    });

    const appendUser = (user, usersOn) => {
      const li = document.createElement('li');
      li.textContent = user.nickname;
      li.setAttribute('data-testid', 'online-user');
      usersOn.appendChild(li);
    };

    socket.on('message', (message) => {
      const li = document.createElement('li');
      li.textContent = message;
      li.setAttribute('data-testid', 'message')
      messages.appendChild(li);
      window.scrollTo(0, document.body.scrollHeight);
    });

    socket.on('userloged', (usersLogedIn) => {
      const index = usersLogedIn.findIndex((user) => user.id === socket.id);
      const firstUser = usersLogedIn[index];
      usersLogedIn.splice(index, 1);
      usersLogedIn.unshift(firstUser);
      let usersOn = document.querySelector('.users-on');
      usersOn.innerHTML = "";
      usersLogedIn.map((user) => appendUser(user, usersOn));
    });

  </script>
</body>

</html>