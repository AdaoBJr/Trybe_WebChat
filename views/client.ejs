<!DOCTYPE html>
<html>

<head>
  <title>Socket.IO chat</title>
  <style>
    body {
      margin: 0;
      padding-bottom: 3rem;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    }

    #form {
      background: rgba(0, 0, 0, 0.15);
      padding: 0.25rem;
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      display: flex;
      height: 3rem;
      box-sizing: border-box;
      backdrop-filter: blur(10px);
    }

    #input-message {
      border: none;
      padding: 0 1rem;
      flex-grow: 1;
      border-radius: 2rem;
      margin: 0.25rem;
    }

    #input:focus {
      outline: none;
    }

    #form>button {
      background: #333;
      border: none;
      padding: 0 1rem;
      margin: 0.25rem;
      border-radius: 3px;
      outline: none;
      color: #fff;
    }

    #messages {
      list-style-type: none;
      margin: 0;
      padding: 0;
    }

    #messages>li {
      padding: 0.5rem 1rem;
    }

    #messages>li:nth-child(odd) {
      background: #efefef;
    }
  </style>


  <script src="/socket.io/socket.io.js"></script>
  <!-- <script src="/util/createMessageLi.js"></script> -->
</head>

<body>
  <aside>
    <!-- form correspondente ao nickname -->
    <form id="form-aside" action="">
      <input type='text' placeholder='Insira seu apelido' name='name' id='name' data-testid="nickname-box" />
      <button type='text' id="nickname-button" data-testid="nickname-button">Entrar</button>
    </form>

    <ul id="users-online"></ul>
  </aside>

  <ul id="messages"></ul>
  <!-- form correspondente as mensagens  -->
  <form id="form" action="">
    <input id="input-message" autocomplete="off" data-testid="message-box" /><button
      data-testid="send-button">Enviar</button>
  </form>


  <script>
    const socket = io();
    const form = document.querySelector('#form');
    const chatMessage = document.querySelector('#input-message');
    const nickname = document.querySelector('#name');
    const formNickname = document.querySelector('#form-aside');

    const createUser = () => {
      const randomNickName = generateNickName(16)
      const formatNickname = nickname.value ? nickname.value : randomNickName;
      sessionStorage.setItem('nickname', formatNickname);
      return formatNickname;
    }

    const renderUser = (user) => {
      const ul = document.querySelector('#users-online');
      const li = document.createElement('li');
      li.innerText = user
      li.setAttribute('data-testid', 'online-user')
      ul.appendChild(li);
    }

    form.addEventListener('submit', (e) => {
      e.preventDefault();
      const nicknameSaved = sessionStorage.getItem('nickname')

      socket.emit('message', {
        chatMessage: chatMessage.value,
        nickname: nickname.value
      });

      chatMessage.value = '';
      return false;
    });

    formNickname.addEventListener('submit', (e) => {
      e.preventDefault();
      createUser()
      socket.emit('newUser', createUser());
      nickname.value = '';
    });

    /*
    Função para gerar nickName randomizado
    FONTE: https://www.ti-enxame.com/pt/javascript/gere-stringcaracteres-aleatorios-em-javascript/967048592/
    */
    const dec2hex = (dec) => {
      return ('0' + dec.toString(16)).substr(-2)
    }
    const generateNickName = (len) => {
      var arr = new Uint8Array((len || 40) / 2)
      window.crypto.getRandomValues(arr)
      return Array.from(arr, dec2hex).join('')
    }



    const renderMessageLi = (fullMessage) => {
      const ul = document.querySelector('#messages');
      const li = document.createElement('li');
      li.setAttribute('data-testid', 'message')
      li.innerText = fullMessage;
      ul.appendChild(li);
    };


    socket.emit('newUser', createUser());

    socket.on('newUser', (user) => renderUser(user));
    socket.on('message', (fullMessage) => renderMessageLi(fullMessage))
  </script>

</body>


</html>