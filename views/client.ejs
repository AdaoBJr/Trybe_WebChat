<!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat</title>
    <style>
        body {
          margin: 0;
          padding-bottom: 3rem;
          font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
        }
    
        #form {
          background: rgba(0, 0, 0, 0.15);
          padding: 0.25rem;
          position: fixed;
          bottom: 0;
          left: 0;
          right: 0;
          display: flex;
          height: 3rem;
          box-sizing: border-box;
          backdrop-filter: blur(10px);
        }
    
        #messageInput {
          border: none;
          padding: 0 1rem;
          flex-grow: 1;
          border-radius: 2rem;
          margin: 0.25rem;
        }
    
        #messageInput:focus {
          outline: none;
        }
    
        #form>button {
          background: #333;
          border: none;
          padding: 0 1rem;
          margin: 0.25rem;
          border-radius: 3px;
          outline: none;
          color: #fff;
        }
    
        #mensagens {
          list-style-type: none;
          margin: 0;
          padding: 0;
        }
    
        #mensagens>li {
          padding: 0.5rem 1rem;
        }
    
        #mensagens>li:nth-child(odd) {
          background: #efefef;
        }
      </style>
    <script src="/socket.io/socket.io.js"></script> 
</head>
<body>
    <ul id="mensagens"></ul>
    <div id="nickname"></div>
    <form id="form_nickname" action="">
      <input data-testid="nickname-box" type="text" autocomplete="off" id="nicknameInput"><button data-testid="nickname-button">Salvar</button>
    </form>
    <form id="form" action="">
      <input data-testid="message-box" type="text" autocomplete="off" id="messageInput"><button data-testid="send-button">Enviar</button>
    </form>
    <script>
        const socket = io();
        const form = document.querySelector('#form');
        const inputMessage = document.querySelector('#messageInput');
        const formNickname = document.querySelector('#form_nickname');
        const inputNick = document.querySelector('#nicknameInput');
     
        formNickname.addEventListener('submit', (e) => {
          e.preventDefault();
          const saveNick = sessionStorage.setItem('nickname', inputNick.value);         
          inputNick.value = '';
          return false;
        });
        
        // função para gerar nickName randomizado
        ///
        const dec2hex = (dec) => {
          return ('0' + dec.toString(16)).substr(-2)
        }

        const generateNickName = (len) => {
          var arr = new Uint8Array((len || 40) / 2)
          window.crypto.getRandomValues(arr)
          return Array.from(arr, dec2hex).join('')
        }
        ///

        form.addEventListener('submit', (e) => {
          e.preventDefault();
          const renderNick = generateNickName(16);
          const nickStorage = sessionStorage.getItem('nickname');
          /* const spanNick = document.createElement('span'); */
          /* spanNick.setAttribute("") */
          /* asideNick.appendChild(spanNick); */
          /* spanNick.innerText = nickStorage; */
          const nickName = (!nickStorage) ? renderNick : nickStorage;
          socket.emit('message', { chatMessage: inputMessage.value, nickname: nickName});
          inputMessage.value = '';
          return false;
        });

        const createMessage = (msg) => {
          const messageUl = document.querySelector('#mensagens');
          const li = document.createElement('li');
          const span = document.createElement('span');
          span.innerText = `${msg.newDataHora} - ${msg.data.nickname}: ${msg.data.chatMessage}`
          li.appendChild(span);
          li.setAttribute("data-testid", "message");
          messageUl.appendChild(li);
        }

        socket.on('message', (message) => createMessage(message));

        socket.on('message', (msg) => {
         /*  console.log(generateNickName(16), 'aleatorio aqui'); */
          const divNick = document.querySelector('#nickname');
          const spanNick = document.createElement('span');
          /* spanNick.setAttribute("data-testid", "online-user");  */
          spanNick.innerText = `${msg.data.nickname}`;
          divNick.appendChild(spanNick); 
        });

        socket.emit('initialNick', generateNickName(16));

        socket.on('initialNick', (msg) => {
          const divNick = document.querySelector('#nickname');
          const spanNick = document.createElement('span');
          spanNick.setAttribute("data-testid", "online-user"); 
          spanNick.innerText = `${msg}`;
          divNick.appendChild(spanNick); 
        });

    </script>
</body>
</html>